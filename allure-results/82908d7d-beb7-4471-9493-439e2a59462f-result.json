{"name": "test_Gmail_Login[firefox]", "status": "broken", "statusDetails": {"message": "KeyError: 'moz:firefoxOptions'", "trace": "request = <SubRequest 'initialization_driver' for <Function test_Gmail_Login[firefox]>>\n\n    @pytest.fixture(params=[\"chrome\", \"firefox\"], scope='class')\n    def initialization_driver(request):\n        global web_driver\n        browser = request.param\n    \n        if browser == \"chrome\":\n            # chrome_options = Options()\n            # chrome_options.add_argument(\"--headless\")\n            # service = Service(TestData.CHROME_EXECUTABLE_PATH)\n            # web_driver = webdriver.Chrome(service=service, options=chrome_options)\n            capabilities = DesiredCapabilities.CHROME.copy()\n            options = webdriver.ChromeOptions()\n            options.add_argument(\"--headless\")\n            capabilities.update(options.to_capabilities())\n            web_driver = webdriver.Remote(\n                command_executor=\"http://192.168.10.3:4444/wd/hub\",\n                desired_capabilities=capabilities\n            )\n    \n        if browser == \"firefox\": ''\n        # firefox_options = webdriver.FirefoxOptions()\n    \n        # firefox_options.add_argument(\"--headless\")\n        # service = Service(TestData.FIREFOX_EXECTABLE_PATH)\n        # web_driver = webdriver.Firefox(service=service, options=firefox_options)\n    \n        capabilities = DesiredCapabilities.FIREFOX.copy()\n        options = webdriver.FirefoxOptions()\n>       capabilities[\"moz:firefoxOptions\"] = options.to_capabilities()[\"moz:firefoxOptions\"]\nE       KeyError: 'moz:firefoxOptions'\n\nsrc\\PageObjectModel\\Tests\\conftest.py:39: KeyError"}, "parameters": [{"name": "initialization_driver", "value": "'firefox'"}], "start": 1686270351510, "stop": 1686270351510, "uuid": "3ebd2428-9496-4cb1-a0a4-a9f324a1928f", "historyId": "680b4e4685c6e267b4cd169fe820352e", "testCaseId": "ba002e2ca6dd1527fe743bfa0356f1fb", "fullName": "src.PageObjectModel.Tests.LoginPage_test.Test_Login#test_Gmail_Login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('initialization_driver')"}, {"name": "parentSuite", "value": "src.PageObjectModel.Tests"}, {"name": "suite", "value": "LoginPage_test"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "aLi"}, {"name": "thread", "value": "7524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.PageObjectModel.Tests.LoginPage_test"}]}